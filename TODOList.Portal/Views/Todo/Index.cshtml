@model TODOList.Entities.Models.Todo

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<style>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" / >
    <link href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap.min.css" rel="stylesheet" / >
    <link href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/10.8.1/sweetalert2.min.css" rel="stylesheet" / >
</style>
<div class="panel-body">
    <div class="modal inmodal" id="CreateToDoItemModel" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content animated fadeIn">
                <div class="ibox float-e-margins">
                    @using (Html.BeginForm("Create", "Todo", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", @id = "CreateTodo" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h2 style="margin-left:30px">Insert Todo</h2>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.Label("Todo Title", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.TodoTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TodoTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control ", @id = "DueDate" } })
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10" style="margin-left:160px">
                                    <input type="submit" value="Create" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel-body">
    <div class="modal inmodal" id="EditToDoItemModel" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content animated fadeIn">
                <div class="ibox float-e-margins">
                    @using (Html.BeginForm("Edit", "Todo", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", @id = "EditTodo" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id, new { id = "TodoId" })

                        <div class="form-horizontal">
                            <h2 style="margin-left:30px">Edit Todo</h2>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.Label("Todo Title", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.TodoTitle, new { htmlAttributes = new { @class = "form-control", @id = "TodoTitleEdit" } })
                                    @Html.ValidationMessageFor(model => model.TodoTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control ", @id = "DueDateEdit" } })
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10" style="margin-left:160px">
                                    <input type="submit" value="Save" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<p>
    <button onclick="ShowCreateModal()">Create New Item</button>
</p>

<div class="row">
    <div class="col-sm-12">
        <table class="table table-bordered table-striped" id="toDoTable">
            <thead>
                <tr>
                    <th scope="col">Record Number</th>
                    <th scope="col">Todo Title</th>
                    <th scope="col">Action Column</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section scripts{
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/1.10.15/dataRender/datetime.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/10.8.1/sweetalert2.all.min.js"></script>




    <script>
        $(document).ready(function () {

            bindDatatable();

            // DatePicker
            var new_options = {
                orientation: "right",
                autoclose: true,
                format: 'dd/mm/yyyy',
                endDate: new Date()
            }

            $('#DueDate').datepicker(new_options);
            var Today = new Date();
            var dd = Today.getDate();
            var mm = Today.getMonth() + 1; //January is 0!
            var yyyy = Today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            Today = dd + '/' + mm + '/' + yyyy;


            $("#DueDate").change(function () {
                if ($('#DueDate').val() != "" && $('#DueDate').val() != null) {
                    $("#DueDate").val($('#DueDate').val().split('/')[1] + '/' + $('#DueDate').val().split('/')[0] + '/' + $('#DueDate').val().split('/')[2]);
                }
            })


            $('#DueDateEdit').datepicker(new_options);
            var Today = new Date();
            var dd = Today.getDate();
            var mm = Today.getMonth() + 1; //January is 0!
            var yyyy = Today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            Today = dd + '/' + mm + '/' + yyyy;


            $("#DueDateEdit").change(function () {
                if ($('#DueDateEdit').val() != "" && $('#DueDateEdit').val() != null) {
                    $("#DueDateEdit").val($('#DueDateEdit').val().split('/')[1] + '/' + $('#DueDateEdit').val().split('/')[0] + '/' + $('#DueDateEdit').val().split('/')[2]);
                }
            })




            $('#toDoTable tbody').on('click', 'button.EditToDo', function () {

                var table = $('#toDoTable').DataTable();
                var data = table.row($(this).parents('tr')).data();
                ShowEditModal(data);
            });


            $('#toDoTable tbody').on('click', 'button.DeleteToDo', function () {
                var table = $('#toDoTable').DataTable();
                var data = table.row($(this).parents('tr')).data();
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to delete this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {

                        $.ajax({
                            type: "POST",
                            url: "/Todo/ConfirmDelete",
                            data: { id: data.Id },
                            success: function () {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Item Deleted Successfully',
                                    showConfirmButton: true

                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.reload();
                                    }
                                })
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Something went wrong!'
                                })
                            }
                        });

                    }

                })
            });

            $('#toDoTable tbody').on('click', 'button.MarkDone', function () {

                var table = $('#toDoTable').DataTable();
                var tr = $(this).closest('tr');
                tr.css({ "background-color": "green" });
                tr.find('button.EditToDo').hide();
                table.row(($(this).hide()));

            });

            function hideButtons() {

                $('#toDoTable tbody').on('click', 'button.EditToDo', function () {

                    var table = $('#toDoTable').DataTable();

                    table.row($('button.EditToDo').hide());

                });


                $('#toDoTable tbody').on('click', 'button.MarkToDo', function () {

                    var table = $('#toDoTable').DataTable();

                    table.row($(this).hide());

                });

            }

        });

        function ShowCreateModal() {

            $('#CreateToDoItemModel').modal('show');

        }

        function bindDatatable() {
            datatable = $('#toDoTable')
                .DataTable({
                    "sAjaxSource": "/Todo/GetData",
                    "bServerSide": true,
                    "bProcessing": true,
                    "bSearchable": true,
                    "order": [[1, 'asc']],
                    "columns": [
                        {
                            "data": "Id",
                            "autoWidth": true,
                            "searchable": true
                        },
                        {
                            "data": "TodoTitle",
                            "autoWidth": true,
                            "searchable": true
                        },
                        {
                            "data": null,
                            "defaultContent": "<button style='margin:5px;' class=\"EditToDo\">Edit</button><button style='margin:5px;' class=\"DeleteToDo\">Delete</button><button style='margin:5px;' class=\"MarkDone\">Mark</button>",
                            "autoWidth": true,
                        },
                    ]

                });
        }

        function ShowEditModal(data) {

            $('#EditToDoItemModel').modal('show');
            $('#TodoId').val(data.Id);
            $('#TodoTitleEdit').val(data.TodoTitle);

        }

    </script>
}